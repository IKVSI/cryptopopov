# Task17: Нейросетевой протокол синхронизации алгоритма

Реализация нейросетевого протокола синхронизации криптографического алгоритма с использованием ключа

# Описание протокола

    1) A и B генерируют 2 сети с одинаковым ключом(ключ уже был получен другими алгоритмами обмена)
    2) A шифрует сообщение своей нейросетью и отправляет зашифрованное сообщение B
    3) B пытается расшифровать сообщение своей сетью и отправляет его A
    4) A получает результат B и сообщает ему какие биты были правильные
    5) B усиливает части с правильными битами
    6) Если все биты правильны, то сеть готова шифровать трафик, если нет - переходим на шаг 3

## Использование

Пользователю предлагается понаблюдать за обучением сети B расшифровывать трафик A

### Help программы:

usage: main.py [-h]

Протокол обучения нейросетевого криптографического шифра

optional arguments:
  -h, --help  show this help message and exit

## Примеры работы

Для удобства есть сценарий:

execute.bat
--------------------------------------------------------------------------------
@ECHO OFF
TITLE MASTER
python main.py
PAUSE
--------------------------------------------------------------------------------

### Логи Программы: test.file

Alice  : Отправляем зашифрованное сетью секретное сообщение
Bob    : 1 раунд: Декодируем сообщение и отправляем Alice для проверки
Bob    : Получены совпавшие позиции: 0:- 1:- 2:- 3:- 4:- 5:- 6:- 7:-
Bob    : 2 раунд: Декодируем сообщение и отправляем Alice для проверки
Bob    : Получены совпавшие позиции: 0:- 1:- 2:- 3:- 4:- 5:- 6:- 7:-
Bob    : 3 раунд: Декодируем сообщение и отправляем Alice для проверки
Bob    : Получены совпавшие позиции: 0:- 1:- 2:- 3:- 4:+ 5:- 6:+ 7:-
Bob    : 4 раунд: Декодируем сообщение и отправляем Alice для проверки
Bob    : Получены совпавшие позиции: 0:- 1:- 2:- 3:- 4:+ 5:- 6:+ 7:-
Bob    : 5 раунд: Декодируем сообщение и отправляем Alice для проверки
Bob    : Получены совпавшие позиции: 0:- 1:- 2:- 3:- 4:+ 5:- 6:+ 7:-
Bob    : 6 раунд: Декодируем сообщение и отправляем Alice для проверки
Bob    : Получены совпавшие позиции: 0:- 1:- 2:- 3:- 4:+ 5:- 6:+ 7:-
Bob    : 7 раунд: Декодируем сообщение и отправляем Alice для проверки
Bob    : Получены совпавшие позиции: 0:+ 1:- 2:- 3:+ 4:+ 5:+ 6:+ 7:-
Bob    : 8 раунд: Декодируем сообщение и отправляем Alice для проверки
Bob    : Получены совпавшие позиции: 0:+ 1:- 2:- 3:+ 4:+ 5:+ 6:+ 7:+
Bob    : 9 раунд: Декодируем сообщение и отправляем Alice для проверки
Bob    : Получены совпавшие позиции: 0:+ 1:+ 2:+ 3:+ 4:+ 5:+ 6:+ 7:+
Alice  : Все биты совпали, сеть готова для шифрования


## Дополнительные зависимости

module Cryptodome
    можно установить командой (от администратора) pip3 install pycryptodomex
также этот сценарий лежит в файле dependencies.bat

## Кластер

Windows 10 Home Russian Версия 1809
Python 3.7.2 32bit
12GB RAM
Intel Core I7-4710MQ 2.50Ghz

## Автор

Кулаков Владислав Сергеевич КБ-501 © 2019

